/**
 * DropboxLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

;(function (angular) {
'use strict';

angular.module('DropboxLib')
    .factory('Configuration', ['APIHelper', 'Servers', 'Environments', Configuration]);

    function Configuration(APIHelper, Servers, Environments) {
        var environmentsMap = [],
            e = Environments, 
            s = Servers;
    
    
        environmentsMap[e.PRODUCTION] = [];
    
        environmentsMap[e.PRODUCTION][s.MDEFAULT] = 'https://{basepath}/2';
        environmentsMap[e.PRODUCTION][s.AUTH] = 'https://www.dropbox.com/oauth2';

        return {
            // The object containing the OAuthToken
            oAuthToken: {},
    
            // Callback function to be called on token being set/refreshed
            // TODO: Replace the oAuthTokenUpdateCallback with an appropriate callback function
            oAuthTokenUpdateCallback: null,
    
            //OAuth 2 Client ID
            //TODO: Replace the oAuthClientId with an appropriate value
            oAuthClientId : 'oAuthClientId',

            //OAuth 2 Redirection endpoint or Callback Uri
            //TODO: Replace the oAuthRedirectUri with an appropriate value
            oAuthRedirectUri : 'oAuthRedirectUri',

            /**
             * Base path of the Dropbox API server
             * @type {string}
             */
            basepath: 'api.dropbox.com',

            /**
             * Current API environment
             * @type {string}
             */
            currentEnvironment: e.PRODUCTION,
    
            /**
             * Get base URI for a server in the current API environment
             * @param  {string|null} server Server name
             * @return {string}             Base URI for server
             */
            getBaseUri: function (server) {
                var url = environmentsMap[this.currentEnvironment][server || s.MDEFAULT];
                var urlParams = {
                        basepath: this.basepath
                };
                return APIHelper.appendUrlWithTemplateParameters(url, urlParams);
            }
        };
    }

}(angular));
